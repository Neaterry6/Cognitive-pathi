import React, { useState, useEffect } from 'react';
import { loadStripe } from '@stripe/stripe-js';
import {
  Elements,
  PaymentElement,
  useStripe,
  useElements,
} from '@stripe/react-stripe-js';
import { Button } from '@/components/ui/button';
import { Card, CardContent } from '@/components/ui/card';
import { Check, Crown, Star, Zap, Calculator, BookOpen, Trophy, Globe } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';
import { apiRequest } from '@/lib/queryClient';
import { User } from '@/types';

// Make sure to call `loadStripe` outside of a component's render to avoid
// recreating the `Stripe` object on every render.
if (!import.meta.env.VITE_STRIPE_PUBLIC_KEY) {
  throw new Error('Missing required Stripe key: VITE_STRIPE_PUBLIC_KEY');
}
const stripePromise = loadStripe(import.meta.env.VITE_STRIPE_PUBLIC_KEY);

interface CheckoutFormProps {
  user: User;
  onSuccess: () => void;
}

function CheckoutForm({ user, onSuccess }: CheckoutFormProps) {
  const stripe = useStripe();
  const elements = useElements();
  const { toast } = useToast();
  const [isLoading, setIsLoading] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    if (!stripe || !elements) {
      return;
    }

    setIsLoading(true);

    try {
      const { error } = await stripe.confirmPayment({
        elements,
        confirmParams: {
          return_url: `${window.location.origin}?payment=success`,
        },
        redirect: 'if_required',
      });

      if (error) {
        toast({
          title: "Payment Failed",
          description: error.message || "Please try again",
          variant: "destructive",
        });
      } else {
        // Payment succeeded
        toast({
          title: "Payment Successful!",
          description: "Welcome to Premium! You now have access to all features.",
        });
        onSuccess();
      }
    } catch (error) {
      console.error('Payment error:', error);
      toast({
        title: "Payment Error",
        description: "An unexpected error occurred. Please try again.",
        variant: "destructive",
      });
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <form onSubmit={handleSubmit} className="space-y-6">
      <div className="bg-gray-900 p-4 rounded-lg">
        <PaymentElement 
          options={{
            layout: 'tabs',
            defaultValues: {
              billingDetails: {
                name: user.nickname,
                email: user.email || '',
              }
            }
          }}
        />
      </div>
      
      <Button
        type="submit"
        disabled={!stripe || !elements || isLoading}
        className="w-full bg-gradient-to-r from-blue-600 to-purple-600 hover:opacity-90 py-3 font-semibold text-lg transition-all duration-200 active:scale-95"
      >
        {isLoading ? (
          <div className="flex items-center justify-center">
            <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2"></div>
            Processing Payment...
          </div>
        ) : (
          <>
            <Crown className="h-5 w-5 mr-2" />
            Upgrade to Premium - ‚Ç¶2,500/month
          </>
        )}
      </Button>
    </form>
  );
}

interface CheckoutProps {
  user: User;
  onBack: () => void;
  onSuccess: () => void;
}

export default function Checkout({ user, onBack, onSuccess }: CheckoutProps) {
  const [clientSecret, setClientSecret] = useState<string>("");
  const [isLoading, setIsLoading] = useState(true);
  const { toast } = useToast();

  useEffect(() => {
    // Create PaymentIntent as soon as the page loads
    createPaymentIntent();
  }, []);

  const createPaymentIntent = async () => {
    setIsLoading(true);
    try {
      const response = await apiRequest("POST", "/api/create-payment-intent", {
        amount: 2500, // ‚Ç¶2,500 in kobo (Nigerian currency)
        currency: 'ngn',
        userId: user.id,
      });
      const data = await response.json();
      setClientSecret(data.clientSecret);
    } catch (error) {
      console.error('Error creating payment intent:', error);
      toast({
        title: "Payment Setup Failed",
        description: "Unable to initialize payment. Please try again.",
        variant: "destructive",
      });
    } finally {
      setIsLoading(false);
    }
  };

  const premiumFeatures = [
    {
      icon: <Zap className="h-6 w-6" />,
      title: "Unlimited Practice Tests",
      description: "Access to all subjects with unlimited attempts"
    },
    {
      icon: <BookOpen className="h-6 w-6" />,
      title: "AI-Powered Study Plans",
      description: "Personalized study plans generated by Gemini, GPT-4 & Grok"
    },
    {
      icon: <Calculator className="h-6 w-6" />,
      title: "Scientific Calculator",
      description: "Advanced calculator for Mathematics and Physics"
    },
    {
      icon: <Trophy className="h-6 w-6" />,
      title: "Detailed Analytics",
      description: "Track your progress with comprehensive performance insights"
    },
    {
      icon: <Globe className="h-6 w-6" />,
      title: "Wikipedia Integration",
      description: "Research any topic with integrated Wikipedia search"
    },
    {
      icon: <Star className="h-6 w-6" />,
      title: "Priority Support",
      description: "Get priority customer support and feature requests"
    }
  ];

  if (isLoading || !clientSecret) {
    return (
      <div className="space-y-6">
        {/* Header */}
        <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-4 sm:space-y-0">
          <div className="flex items-center space-x-4">
            <div className="text-4xl">üëë</div>
            <div>
              <h2 className="text-3xl font-bold text-white">Upgrade to Premium</h2>
              <p className="text-gray-400">Unlock all features and excel in your POST UTME</p>
            </div>
          </div>
          <Button
            onClick={onBack}
            className="bg-gray-600 hover:bg-gray-700 px-4 py-2 rounded-lg transition-colors"
          >
            ‚Üê Back to Dashboard
          </Button>
        </div>

        {/* Loading state */}
        <Card className="bg-gray-800 border-gray-700">
          <CardContent className="p-8 text-center">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4"></div>
            <p className="text-gray-400">Setting up your payment...</p>
          </CardContent>
        </Card>
      </div>
    );
  }

  return (
    <div className="space-y-8">
      {/* Header */}
      <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center space-y-4 sm:space-y-0">
        <div className="flex items-center space-x-4">
          <div className="text-4xl">üëë</div>
          <div>
            <h2 className="text-3xl font-bold text-white">Upgrade to Premium</h2>
            <p className="text-gray-400">Unlock all features and excel in your POST UTME</p>
          </div>
        </div>
        <Button
          onClick={onBack}
          className="bg-gray-600 hover:bg-gray-700 px-4 py-2 rounded-lg transition-colors"
        >
          ‚Üê Back to Dashboard
        </Button>
      </div>

      {/* Current vs Premium comparison */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        {/* Current Plan */}
        <Card className="bg-gray-800 border-gray-700">
          <CardContent className="p-6">
            <div className="text-center mb-6">
              <h3 className="text-xl font-bold text-white mb-2">Free Plan</h3>
              <p className="text-gray-400">Your current plan</p>
              <div className="text-3xl font-bold text-white mt-4">‚Ç¶0</div>
              <p className="text-gray-400 text-sm">Forever</p>
            </div>
            
            <div className="space-y-3">
              <div className="flex items-center text-gray-400">
                <Check className="h-5 w-5 mr-3 text-green-500" />
                <span>5 practice tests per subject</span>
              </div>
              <div className="flex items-center text-gray-400">
                <Check className="h-5 w-5 mr-3 text-green-500" />
                <span>Basic explanations</span>
              </div>
              <div className="flex items-center text-gray-400">
                <Check className="h-5 w-5 mr-3 text-green-500" />
                <span>General leaderboard</span>
              </div>
              <div className="flex items-center text-gray-500">
                <div className="h-5 w-5 mr-3 bg-gray-600 rounded-full"></div>
                <span className="line-through">AI-powered study plans</span>
              </div>
              <div className="flex items-center text-gray-500">
                <div className="h-5 w-5 mr-3 bg-gray-600 rounded-full"></div>
                <span className="line-through">Scientific calculator</span>
              </div>
              <div className="flex items-center text-gray-500">
                <div className="h-5 w-5 mr-3 bg-gray-600 rounded-full"></div>
                <span className="line-through">Detailed analytics</span>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Premium Plan */}
        <Card className="bg-gradient-to-b from-blue-900 to-purple-900 border-blue-500 border-2 relative overflow-hidden">
          <div className="absolute top-0 right-0 bg-gradient-to-l from-yellow-500 to-orange-500 text-black px-3 py-1 text-sm font-bold">
            RECOMMENDED
          </div>
          <CardContent className="p-6">
            <div className="text-center mb-6">
              <h3 className="text-xl font-bold text-white mb-2 flex items-center justify-center">
                <Crown className="h-6 w-6 mr-2 text-yellow-500" />
                Premium Plan
              </h3>
              <p className="text-blue-200">Everything you need to succeed</p>
              <div className="text-3xl font-bold text-white mt-4">‚Ç¶2,500</div>
              <p className="text-blue-200 text-sm">per month</p>
            </div>
            
            <div className="space-y-3">
              {premiumFeatures.map((feature, index) => (
                <div key={index} className="flex items-start text-white">
                  <div className="text-yellow-500 mr-3 mt-0.5">
                    {feature.icon}
                  </div>
                  <div>
                    <span className="font-semibold">{feature.title}</span>
                    <p className="text-blue-100 text-sm">{feature.description}</p>
                  </div>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Payment Form */}
      <Card className="bg-gray-800 border-gray-700">
        <CardContent className="p-8">
          <div className="max-w-md mx-auto">
            <h3 className="text-xl font-bold text-white mb-6 text-center">
              Complete Your Upgrade
            </h3>
            
            <Elements
              stripe={stripePromise}
              options={{
                clientSecret,
                appearance: {
                  theme: 'night',
                  variables: {
                    colorPrimary: '#3B82F6',
                    colorBackground: '#1F2937',
                    colorText: '#F9FAFB',
                    colorDanger: '#EF4444',
                    fontFamily: 'Inter, system-ui, sans-serif',
                    spacingUnit: '4px',
                    borderRadius: '8px',
                  },
                },
              }}
            >
              <CheckoutForm user={user} onSuccess={onSuccess} />
            </Elements>

            <div className="mt-6 text-center">
              <p className="text-sm text-gray-400 mb-2">
                üîí Your payment is secured by Stripe
              </p>
              <p className="text-xs text-gray-500">
                Cancel anytime. No hidden fees. Support Nigerian students.
              </p>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Trust indicators */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        <Card className="bg-gray-800 border-gray-700">
          <CardContent className="p-6 text-center">
            <div className="text-3xl mb-3">üéì</div>
            <h4 className="font-bold text-white mb-2">University Approved</h4>
            <p className="text-sm text-gray-400">
              Aligned with University of Ibadan POST UTME standards
            </p>
          </CardContent>
        </Card>

        <Card className="bg-gray-800 border-gray-700">
          <CardContent className="p-6 text-center">
            <div className="text-3xl mb-3">üèÜ</div>
            <h4 className="font-bold text-white mb-2">Proven Results</h4>
            <p className="text-sm text-gray-400">
              95% of premium users improve their scores by 40%+
            </p>
          </CardContent>
        </Card>

        <Card className="bg-gray-800 border-gray-700">
          <CardContent className="p-6 text-center">
            <div className="text-3xl mb-3">üí¨</div>
            <h4 className="font-bold text-white mb-2">24/7 Support</h4>
            <p className="text-sm text-gray-400">
              Get help whenever you need it from our expert team
            </p>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}
